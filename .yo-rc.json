{
  "*": {
    "configuration": {
      "config": {
        "configName": "config",
        "topScope": [
          "const path = require('path');",
          "const webpack = require('webpack');",
          "\n",
          "/*\n * SplitChunksPlugin is enabled by default and replaced\n * deprecated CommonsChunkPlugin. It automatically identifies modules which\n * should be splitted of chunk by heuristics using module duplication count and\n * module category (i. e. node_modules). And splits the chunks…\n *\n * It is safe to remove \"splitChunks\" from the generated configuration\n * and was added as an educational example.\n *\n * https://webpack.js.org/plugins/split-chunks-plugin/\n *\n */",
          "const HtmlWebpackPlugin = require('html-webpack-plugin')",
          "\n",
          "/*\n * We've enabled HtmlWebpackPlugin for you! This generates a html\n * page for you when you compile webpack, which will make you start\n * developing and prototyping faster.\n * \n * https://github.com/jantimon/html-webpack-plugin\n * \n */"
        ],
        "webpackOptions": {
          "mode": "'development'",
          "entry": "'./static-src/index.js'",
          "output": {
            "filename": "'[name].[chunkhash].js'",
            "path": "path.resolve(__dirname, 'public/static')"
          },
          "plugins": [
            "new webpack.ProgressPlugin()",
            "new HtmlWebpackPlugin()"
          ],
          "module": {
            "rules": [
              {
                "test": "/.(js|jsx)$/",
                "include": [
                  "path.resolve(__dirname, 'static-src')"
                ],
                "loader": "'babel-loader'",
                "options": {
                  "plugins": [
                    "'syntax-dynamic-import'"
                  ],
                  "presets": [
                    [
                      "'@babel/preset-env'",
                      {
                        "'modules'": false
                      }
                    ]
                  ]
                }
              }
            ]
          },
          "optimization": {
            "splitChunks": {
              "cacheGroups": {
                "vendors": {
                  "priority": -10,
                  "test": "/[\\\\/]node_modules[\\\\/]/"
                }
              },
              "chunks": "'async'",
              "minChunks": 1,
              "minSize": 30000,
              "name": true
            }
          },
          "devServer": {
            "open": true
          }
        }
      }
    }
  },
  "configuration": {
    "config": {
      "configName": "config",
      "topScope": [
        "const path = require('path');",
        "const webpack = require('webpack');",
        "\n",
        "/*\n * SplitChunksPlugin is enabled by default and replaced\n * deprecated CommonsChunkPlugin. It automatically identifies modules which\n * should be splitted of chunk by heuristics using module duplication count and\n * module category (i. e. node_modules). And splits the chunks…\n *\n * It is safe to remove \"splitChunks\" from the generated configuration\n * and was added as an educational example.\n *\n * https://webpack.js.org/plugins/split-chunks-plugin/\n *\n */",
        "/*\n * We've enabled MiniCssExtractPlugin for you. This allows your app to\n * use css modules that will be moved into a separate CSS file instead of inside\n * one of your module entries!\n *\n * https://github.com/webpack-contrib/mini-css-extract-plugin\n *\n */",
        "const MiniCssExtractPlugin = require('mini-css-extract-plugin');",
        "\n",
        "/*\n * We've enabled TerserPlugin for you! This minifies your app\n * in order to load faster and run less javascript.\n *\n * https://github.com/webpack-contrib/terser-webpack-plugin\n *\n */",
        "const TerserPlugin = require('terser-webpack-plugin');",
        "\n"
      ],
      "webpackOptions": {
        "mode": "'development'",
        "entry": "'./static-src/index.js'",
        "output": {
          "path": "path.resolve(__dirname, 'public/static')"
        },
        "plugins": [
          "new webpack.ProgressPlugin()",
          "new MiniCssExtractPlugin({ filename:'static-src/index.[chunkhash].css' })"
        ],
        "module": {
          "rules": [
            {
              "test": "/\\.(js|jsx)$/",
              "include": [
                "path.resolve(__dirname, 'static-src')"
              ],
              "loader": "'babel-loader'"
            },
            {
              "test": "/.(less|css)$/",
              "use": [
                {
                  "loader": "MiniCssExtractPlugin.loader"
                },
                {
                  "loader": "\"style-loader\""
                },
                {
                  "loader": "\"css-loader\"",
                  "options": {
                    "sourceMap": true
                  }
                },
                {
                  "loader": "\"less-loader\"",
                  "options": {
                    "sourceMap": true
                  }
                }
              ]
            }
          ]
        },
        "optimization": {
          "minimizer": [
            "new TerserPlugin()"
          ],
          "splitChunks": {
            "cacheGroups": {
              "vendors": {
                "priority": -10,
                "test": "/[\\\\/]node_modules[\\\\/]/"
              }
            },
            "chunks": "'async'",
            "minChunks": 1,
            "minSize": 30000,
            "name": false
          }
        }
      }
    },
    "usingDefaults": false
  }
}
